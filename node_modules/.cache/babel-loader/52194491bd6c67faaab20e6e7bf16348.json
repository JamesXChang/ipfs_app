{"ast":null,"code":"import _regeneratorRuntime from\"/Users/james/Desktop/DAPP/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/james/Desktop/DAPP/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/james/Desktop/DAPP/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/james/Desktop/DAPP/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/james/Desktop/DAPP/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/james/Desktop/DAPP/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/james/Desktop/DAPP/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';//import logo from ‘./logo.svg’;\nimport'./App.css';import web3 from'./web3';import ipfs from'./ipfs';import storehash from'./storehash';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={ipfsHash:null,buffer:'',ethAddress:'',blockNumber:'',transactionHash:'',gasUsed:'',txReceipt:'',ipfs_img:null};_this.captureFile=function(event){event.stopPropagation();event.preventDefault();var file=event.target.files[0];var reader=new window.FileReader();reader.readAsArrayBuffer(file);reader.onloadend=function(){return _this.convertToBuffer(reader);};};_this.convertToBuffer=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(reader){var buffer;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Buffer.from(reader.result);case 2:buffer=_context.sent;//set this buffer -using es6 syntax\n_this.setState({buffer:buffer});case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.onClick=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_this.setState({blockNumber:\"waiting..\"});_this.setState({gasUsed:\"waiting...\"});//get Transaction Receipt in console on click\n//See: https://web3js.readthedocs.io/en/1.0/web3-eth.html#gettransactionreceipt\n_context2.next=5;return web3.eth.getTransactionReceipt(_this.state.transactionHash,function(err,txReceipt){console.log(err,txReceipt);_this.setState({txReceipt:txReceipt});});case 5:_context2.next=7;return _this.setState({blockNumber:_this.state.txReceipt.blockNumber});case 7:_context2.next=9;return _this.setState({gasUsed:_this.state.txReceipt.gasUsed});case 9:_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));_this.onSubmit=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event){var accounts,ethAddress;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:event.preventDefault();//bring in user's metamask account address\n_context3.next=3;return web3.eth.getAccounts();case 3:accounts=_context3.sent;console.log('Sending from Metamask account: '+accounts[0]);//obtain contract address from storehash.js\n_context3.next=7;return storehash.options.address;case 7:ethAddress=_context3.sent;_this.setState({ethAddress:ethAddress});//save document to IPFS,return its hash#, and set hash# to state\n//https://github.com/ipfs/interface-ipfs-core/blob/master/SPEC/FILES.md#add \n_context3.next=11;return ipfs.add(_this.state.buffer,function(err,ipfsHash){console.log(err,ipfsHash);//setState by setting ipfsHash to ipfsHash[0].hash \n_this.setState({ipfsHash:ipfsHash[0].hash});var ipfs_img=\"https://gateway.ipfs.io/ipfs/\"+ipfsHash[0].hash;console.log(err,ipfs_img);_this.setState({ipfs_img:ipfs_img});// ipfs_img = image('http://www.ghttps://gateway.ipfs.io/ipfs/QmRrwgD7JYq3CTZUrJ6WPKKxkwPCuKY5CL6wC8DyF6uDSfoogle.com/image.png');\n// call Ethereum contract method \"setHash\" and .send IPFS hash to etheruem contract \n//return the transaction hash from the ethereum contract\n//see, this https://web3js.readthedocs.io/en/1.0/web3-eth-contract.html#methods-mymethod-send\nstorehash.methods.setHash(_this.state.ipfsHash).send({from:accounts[0]},function(error,transactionHash){console.log(transactionHash);_this.setState({transactionHash:transactionHash});});//storehash \n});case 11:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x2){return _ref3.apply(this,arguments);};}();return _this;}_createClass(App,[{key:\"render\",//onSubmit\nvalue:function render(){return React.createElement(\"div\",{className:\"App\"},React.createElement(\"header\",{className:\"App-header\"},React.createElement(\"h1\",null,\" Ethereum and IPFS with Create React App\")),React.createElement(\"hr\",null),React.createElement(\"grid\",null,React.createElement(\"h3\",null,\" Choose file to send to IPFS \"),React.createElement(\"div\",{class:\"div_center\"},React.createElement(\"form\",{class:\"form-group\",onSubmit:this.onSubmit},React.createElement(\"input\",{type:\"file\",onChange:this.captureFile}),React.createElement(\"button\",{class:\"button_center btn btn-outline-primary cursor-pointer\",type:\"submit\"},\" Send it\"))),React.createElement(\"br\",null),React.createElement(\"hr\",null),React.createElement(\"div\",{class:\"div_center\"},React.createElement(\"div\",{class:\"col-md-3 col-x2-1\"},React.createElement(\"button\",{type:\"button\",class:\"button2 btn-block btn btn-outline-primary nofocus cursor-pointer\",onClick:this.onClick},\" Get Transaction Receipt \")),React.createElement(\"table\",{class:\"table table-striped table-hover\",bordered:true,responsive:true},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"th\",{scope:\"col\",class:\"col-md-3\"},\"Tx Receipt Category\"),React.createElement(\"th\",{scope:\"col\",class:\"col-md-3\"},\"Values\"))),React.createElement(\"tbody\",null,React.createElement(\"tr\",null,React.createElement(\"th\",{scope:\"row\"},\"IPFS Hash # stored on Eth Contract: \"),React.createElement(\"td\",null,this.state.ipfsHash)),React.createElement(\"tr\",null,React.createElement(\"th\",{scope:\"row\"},\"Ethereum Contract Address: \"),React.createElement(\"td\",null,this.state.ethAddress)),React.createElement(\"tr\",null,React.createElement(\"th\",{scope:\"row\"},\"Tx Hash # : \"),React.createElement(\"td\",null,this.state.transactionHash)),React.createElement(\"tr\",null,React.createElement(\"th\",{scope:\"row\"},\"Block Number # : \"),React.createElement(\"td\",null,this.state.blockNumber)),React.createElement(\"tr\",null,React.createElement(\"th\",{scope:\"row\"},\"Gas Used : \"),React.createElement(\"td\",null,this.state.gasUsed)))),React.createElement(\"h3\",null,\"IPFS image\"),React.createElement(\"iframe\",{src:this.state.ipfs_img,alt:\"ipfs\",width:\"1000\",height:\"500\"}),React.createElement(\"br\",null))));}//render\n}]);return App;}(Component);//App\nexport default App;","map":{"version":3,"sources":["/Users/james/Desktop/DAPP/ipfs/src/App.js"],"names":["React","Component","web3","ipfs","storehash","App","state","ipfsHash","buffer","ethAddress","blockNumber","transactionHash","gasUsed","txReceipt","ipfs_img","captureFile","event","stopPropagation","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","Buffer","from","result","setState","onClick","eth","getTransactionReceipt","err","console","log","onSubmit","getAccounts","accounts","options","address","add","hash","methods","setHash","send","error"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import logo from ‘./logo.svg’;\nimport './App.css';\nimport web3 from './web3';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n\n\nclass App extends Component {\n \n  state = {\n    ipfsHash:null,\n    buffer:'',\n    ethAddress:'',\n    blockNumber:'',\n    transactionHash:'',\n    gasUsed:'',\n    txReceipt: '',   \n    ipfs_img:null\n  };\n\n  captureFile =(event) => {\n    event.stopPropagation()\n    event.preventDefault()\n    const file = event.target.files[0]\n    let reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () => this.convertToBuffer(reader)    \n  };\n\n  convertToBuffer = async(reader) => {\n    //file is converted to a buffer for upload to IPFS\n    const buffer = await Buffer.from(reader.result);\n\n    //set this buffer -using es6 syntax\n    this.setState({buffer});\n  };\n\n  onClick = async () => {\n    try{\n        this.setState({blockNumber:\"waiting..\"});\n        this.setState({gasUsed:\"waiting...\"});\n\n        //get Transaction Receipt in console on click\n        //See: https://web3js.readthedocs.io/en/1.0/web3-eth.html#gettransactionreceipt\n        await web3.eth.getTransactionReceipt(this.state.transactionHash, (err, txReceipt)=>{\n          console.log(err,txReceipt);\n          this.setState({txReceipt});\n        }); //await for getTransactionReceipt\n\n        await this.setState({blockNumber: this.state.txReceipt.blockNumber});\n        await this.setState({gasUsed: this.state.txReceipt.gasUsed});    \n    } //try\n    catch(error){\n        console.log(error);\n    } //catch\n  } //onClick\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    //bring in user's metamask account address\n    const accounts = await web3.eth.getAccounts();\n    \n    console.log('Sending from Metamask account: ' + accounts[0]);\n\n    //obtain contract address from storehash.js\n    const ethAddress= await storehash.options.address;\n    this.setState({ethAddress});\n\n    //save document to IPFS,return its hash#, and set hash# to state\n    //https://github.com/ipfs/interface-ipfs-core/blob/master/SPEC/FILES.md#add \n    await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n      console.log(err,ipfsHash);\n      //setState by setting ipfsHash to ipfsHash[0].hash \n      this.setState({ ipfsHash:ipfsHash[0].hash });\n      const ipfs_img =\"https://gateway.ipfs.io/ipfs/\"+ipfsHash[0].hash;\n      console.log(err,ipfs_img);\n      this.setState({ipfs_img});\n      // ipfs_img = image('http://www.ghttps://gateway.ipfs.io/ipfs/QmRrwgD7JYq3CTZUrJ6WPKKxkwPCuKY5CL6wC8DyF6uDSfoogle.com/image.png');\n      \n      \n      // call Ethereum contract method \"setHash\" and .send IPFS hash to etheruem contract \n      //return the transaction hash from the ethereum contract\n      //see, this https://web3js.readthedocs.io/en/1.0/web3-eth-contract.html#methods-mymethod-send\n      storehash.methods.setHash(this.state.ipfsHash).send({\n        from: accounts[0] \n      }, (error, transactionHash) => {\n        console.log(transactionHash);\n        this.setState({transactionHash});\n      }); //storehash \n    }) //await ipfs.add \n  }; //onSubmit\n\n\n  render() {\n        \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1> Ethereum and IPFS with Create React App</h1>\n        </header>\n        \n        <hr/>\n      <grid>\n        <h3> Choose file to send to IPFS </h3>\n        <div class=\"div_center\">\n          <form class=\"form-group\" onSubmit={this.onSubmit} >\n            <input type = \"file\" onChange = {this.captureFile} />\n            {/* <div class=\" col-md-2 col-x2-1\">  btn-block*/}\n              <button class=\"button_center btn btn-outline-primary cursor-pointer\" type=\"submit\"> Send it</button>\n            {/* </div> */}\n          </form>\n        </div>\n        <br></br>\n        <hr/>\n          <div class=\"div_center\">\n            <div class=\"col-md-3 col-x2-1\">\n              <button type=\"button\" class=\"button2 btn-block btn btn-outline-primary nofocus cursor-pointer\" onClick = {this.onClick}> Get Transaction Receipt </button>\n            </div>\n          <table class=\"table table-striped table-hover\" bordered responsive>\n              <thead>\n                <tr>\n                  <th scope=\"col\" class=\"col-md-3\" >Tx Receipt Category</th>\n                  <th scope=\"col\" class=\"col-md-3\">Values</th>\n                </tr>\n              </thead>\n              \n              <tbody>\n                <tr>\n                  <th scope=\"row\">IPFS Hash # stored on Eth Contract: </th>\n                  <td>{this.state.ipfsHash}</td>\n                </tr>\n                <tr>\n                  <th scope=\"row\">Ethereum Contract Address: </th>\n                  <td>{this.state.ethAddress}</td>\n                </tr>\n                <tr>\n                  <th scope=\"row\">Tx Hash # : </th>\n                  <td>{this.state.transactionHash}</td>\n                </tr>\n                <tr>\n                  <th scope=\"row\">Block Number # : </th>\n                  <td>{this.state.blockNumber}</td>\n                </tr>\n                <tr>\n                  <th scope=\"row\">Gas Used : </th>\n                  <td>{this.state.gasUsed}</td>\n                </tr>\n              \n              </tbody>\n          </table>\n          <h3>IPFS image</h3>\n          <iframe src={this.state.ipfs_img} alt=\"ipfs\" width=\"1000\" height=\"500\"/>\n          <br></br>\n          </div>\n      </grid>\n    </div>\n    );\n  } //render\n} //App\nexport default App;\n"]},"metadata":{},"sourceType":"module"}